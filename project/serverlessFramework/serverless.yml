service: todoserverlessframework

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  region: eu-west-2
  lambdaHashingVersion: 20201221
  httpApi:
    payload: '2.0'
    cors:
      allowedOrigins:
        - '*'
      allowedHeaders:
        - '*'
      allowedMethods:
        - 'OPTIONS'
        - 'GET'
        - 'POST'
        - 'DELETE'
        - 'PUT'
    authorizers:
      ToDoJwtAuthorizer:
        identitySource: $request.header.Authorization
        issuerUrl: https://cognito-idp.eu-west-2.amazonaws.com/eu-west-2_s4syVYS6n
        audience:
          - 60jvm1avgd6t55k4uc15dgu6iq
  environment:
    TODO_TABLE: todo-serverless
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:*"
          Resource:
            Fn::GetAtt:
              - ToDoTable
              - Arn
functions:
  hello:
    handler: todo/hello.handler
    events:
      - httpApi:
          path: /hello
          method: get
  listToDos:
    handler: todo/listToDos.handler
    events:
      - httpApi:
          path: /todos
          method: get
          authorizer:
            name: ToDoJwtAuthorizer
  getToDo:
    handler: todo/getToDo.handler
    events:
      - httpApi:
          path: /todos/{id}
          method: get
          authorizer:
            name: ToDoJwtAuthorizer
  createToDo:
    handler: todo/createToDo.handler
    events:
      - httpApi:
          path: /todos
          method: post
          authorizer:
            name: ToDoJwtAuthorizer
  deleteToDo:
    handler: todo/deleteToDo.handler
    events:
      - httpApi:
          path: /todos/{id}
          method: delete
          authorizer:
            name: ToDoJwtAuthorizer
  updateToDo:
    handler: todo/updateToDo.handler
    events:
      - httpApi:
          path: /todos/{id}
          method: put
          authorizer:
            name: ToDoJwtAuthorizer
resources:
  Resources:
    ToDoTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.TODO_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1